#########################################
#The PADS - MySQL

SELECT CONCAT(NAME,"(",SUBSTR(OCCUPATION,1,1),")")
FROM OCCUPATIONS
ORDER BY NAME;

SELECT CONCAT("There are a total of ",COUNT(OCCUPATION)," ",LOWER(occupation),"s.")
FROM OCCUPATIONS
GROUP BY OCCUPATION
ORDER BY COUNT(OCCUPATION) , OCCUPATION;


####################################
#Occupations - MySQL

SELECT 
    MAX(CASE WHEN Occupation = 'Doctor' THEN Name ELSE NULL END) AS Doctor,
    MAX(CASE WHEN Occupation = 'Professor' THEN Name ELSE NULL END) AS Professor,
    MAX(CASE WHEN Occupation = 'Singer' THEN Name ELSE NULL END) AS Singer,
    MAX(CASE WHEN Occupation = 'Actor' THEN Name ELSE NULL END) AS Actor
FROM 
    (
        SELECT 
            Name,
            Occupation,
            ROW_NUMBER() OVER(PARTITION BY Occupation ORDER BY Name) AS RN
        FROM 
            OCCUPATIONS
    ) T
GROUP BY 
    RN;

####################################
#Binary Tree Nodes - MySQL
SELECT 
    N,
    CASE 
        WHEN P IS NULL THEN 'Root'
        WHEN N  IN (SELECT  P FROM BST) THEN 'Inner'
        ELSE 'Leaf'
    END AS bst
FROM 
    BST
ORDER BY 
    N;





####################################
#New Companies - MySQL
select c.company_code, 
       c.founder,
       count(distinct lm.lead_manager_code),
       count(distinct sm.senior_manager_code),
       count(distinct m.manager_code),
       count(distinct e.employee_code)
from company c, lead_manager lm, senior_manager sm, manager m,
     employee e
where c.company_code = lm.company_code
and lm.lead_manager_code = sm.lead_manager_code
and sm.senior_manager_code = m.senior_manager_code
and m.manager_code = e.manager_code
group by c.company_code, c.founder
order by c.company_code
;






####################################
 - MySQL







